<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soecode.blog.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.soecode.blog.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="is_admin" jdbcType="TINYINT" property="isAdmin" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, nickname, password, phone, email, is_admin, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectPhone" parameterType="com.soecode.blog.entity.User" resultMap="BaseResultMap">
   select id,nickname,phone,email,password from user where phone = #{phone}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert"   parameterType="com.soecode.blog.entity.User" >
    insert into user (nickname, password,phone, email)
    values (#{nickname}, #{password},#{phone}, #{email})
  </insert>
  <insert id="insertSelective" parameterType="com.soecode.blog.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="isAdmin != null">
        is_admin,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null">
        #{isAdmin,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="update" >
    update user
    <set>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isAdmin != null">
        is_admin = #{isAdmin,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateAdmin" >
    update user
    set is_admin= #{isAdmin}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateAll" parameterType="com.soecode.blog.entity.User" >
    update user
    set nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      is_admin = #{isAdmin,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="accountList"  parameterType="com.soecode.blog.entity.User" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List" />
    from user order by create_time desc limit #{start}, #{pagesize}
  </select>
  <select id="TotalCount"  resultType="Integer">
    select  count(1)
    from user
  </select>
  <update id="ifEnable" >
    update user
    <set>is_delete = #{isDelete},
    </set>
    where phone = #{phone}
  </update>
<select id="checklogin"  resultType="Integer">
    select  count(1)
    from user where phone=#{phone} and password = #{password}
  </select>
<select id="Count"  resultType="Integer">
    select  count(1)
    from user where phone=#{phone}
  </select>
    <select id="userInfo"  parameterType="com.soecode.blog.entity.User" resultMap="BaseResultMap">
        select  <include refid="Base_Column_List" />
        from user where phone= #{phone} and password = #{password} order by create_time desc
    </select>
</mapper>